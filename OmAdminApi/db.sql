CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE countries (
    country_id bigint GENERATED BY DEFAULT AS IDENTITY,
    country_name character varying(50) NOT NULL,
    country_code character varying(3) NOT NULL,
    record_status character varying(50) NOT NULL,
    CONSTRAINT "PK_countries" PRIMARY KEY (country_id)
);

INSERT INTO countries (country_id, country_code, country_name, record_status)
VALUES (1, 'IND', 'INDIA', 'ACTIVE');

CREATE UNIQUE INDEX "IX_countries_country_code" ON countries (country_code);

CREATE UNIQUE INDEX "IX_countries_country_name" ON countries (country_name);

SELECT setval(
    pg_get_serial_sequence('countries', 'country_id'),
    GREATEST(
        (SELECT MAX(country_id) FROM countries) + 1,
        nextval(pg_get_serial_sequence('countries', 'country_id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220925042913_Country', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE states (
    state_id bigint GENERATED BY DEFAULT AS IDENTITY,
    state_name character varying(50) NOT NULL,
    state_code character varying(3) NOT NULL,
    record_status character varying(50) NOT NULL,
    country_id bigint NOT NULL,
    CONSTRAINT "PK_states" PRIMARY KEY (state_id),
    CONSTRAINT "FK_states_countries_country_id" FOREIGN KEY (country_id) REFERENCES countries (country_id) ON DELETE CASCADE
);

INSERT INTO states (state_id, country_id, record_status, state_code, state_name)
VALUES (1, 1, 'ACTIVE', 'KRL', 'KERALA');

CREATE INDEX "IX_states_country_id" ON states (country_id);

CREATE UNIQUE INDEX "IX_states_state_code" ON states (state_code);

CREATE UNIQUE INDEX "IX_states_state_name" ON states (state_name);

SELECT setval(
    pg_get_serial_sequence('states', 'state_id'),
    GREATEST(
        (SELECT MAX(state_id) FROM states) + 1,
        nextval(pg_get_serial_sequence('states', 'state_id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220925043714_State', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE districts (
    district_id bigint GENERATED BY DEFAULT AS IDENTITY,
    district_name character varying(50) NOT NULL,
    district_code character varying(3) NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    state_id bigint NOT NULL,
    CONSTRAINT "PK_districts" PRIMARY KEY (district_id),
    CONSTRAINT "FK_districts_states_state_id" FOREIGN KEY (state_id) REFERENCES states (state_id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_districts_district_code" ON districts (district_code);

CREATE UNIQUE INDEX "IX_districts_district_name" ON districts (district_name);

CREATE INDEX "IX_districts_state_id" ON districts (state_id);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220925070917_District', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE post_offices (
    post_office_id bigint GENERATED BY DEFAULT AS IDENTITY,
    post_office_name character varying(50) NOT NULL,
    pin_code character varying(6) NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    district_id bigint NOT NULL,
    CONSTRAINT "PK_post_offices" PRIMARY KEY (post_office_id),
    CONSTRAINT "FK_post_offices_districts_district_id" FOREIGN KEY (district_id) REFERENCES districts (district_id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_post_offices_district_id_post_office_name" ON post_offices (district_id, post_office_name);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220926173926_PostOffice', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE company_levels (
    company_level_id bigint GENERATED BY DEFAULT AS IDENTITY,
    company_level character varying(50) NOT NULL,
    level_no integer NOT NULL,
    CONSTRAINT "PK_company_levels" PRIMARY KEY (company_level_id)
);

INSERT INTO company_levels (company_level_id, company_level, level_no)
VALUES (1, 'ROOT', 1);
INSERT INTO company_levels (company_level_id, company_level, level_no)
VALUES (2, 'GROUP COMPANY', 11);
INSERT INTO company_levels (company_level_id, company_level, level_no)
VALUES (3, 'PARTNER COMPANY', 21);
INSERT INTO company_levels (company_level_id, company_level, level_no)
VALUES (4, 'NATIONAL COMPANY', 31);
INSERT INTO company_levels (company_level_id, company_level, level_no)
VALUES (5, 'ZONAL COMPANY', 41);
INSERT INTO company_levels (company_level_id, company_level, level_no)
VALUES (6, 'STATE COMPANY', 51);
INSERT INTO company_levels (company_level_id, company_level, level_no)
VALUES (7, 'DISTRICT COMPANY', 61);

CREATE UNIQUE INDEX "IX_company_levels_company_level" ON company_levels (company_level);

SELECT setval(
    pg_get_serial_sequence('company_levels', 'company_level_id'),
    GREATEST(
        (SELECT MAX(company_level_id) FROM company_levels) + 1,
        nextval(pg_get_serial_sequence('company_levels', 'company_level_id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220927021502_CompanyLevel', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE banks (
    bank_id bigint GENERATED BY DEFAULT AS IDENTITY,
    bank_name character varying(50) NOT NULL,
    record_status character varying(50) NOT NULL,
    CONSTRAINT "PK_banks" PRIMARY KEY (bank_id)
);

INSERT INTO banks (bank_id, bank_name, record_status)
VALUES (1, 'STATE BANK OF INDIA', 'ACTIVE');
INSERT INTO banks (bank_id, bank_name, record_status)
VALUES (2, 'ICICI', 'ACTIVE');
INSERT INTO banks (bank_id, bank_name, record_status)
VALUES (3, 'HDFC BANK', 'ACTIVE');
INSERT INTO banks (bank_id, bank_name, record_status)
VALUES (4, 'AXIS BANK', 'ACTIVE');
INSERT INTO banks (bank_id, bank_name, record_status)
VALUES (5, 'UNION BANK OF INDIA', 'ACTIVE');

CREATE UNIQUE INDEX "IX_banks_bank_name" ON banks (bank_name);

SELECT setval(
    pg_get_serial_sequence('banks', 'bank_id'),
    GREATEST(
        (SELECT MAX(bank_id) FROM banks) + 1,
        nextval(pg_get_serial_sequence('banks', 'bank_id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220927023422_Bank', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE companies (
    company_id bigint GENERATED BY DEFAULT AS IDENTITY,
    company_name character varying(50) NOT NULL,
    company_code character varying(14) NOT NULL,
    building character varying(50) NOT NULL,
    street character varying(50) NOT NULL,
    gst character varying(15) NOT NULL,
    pan character varying(10) NOT NULL,
    latitude text NOT NULL,
    longitude text NOT NULL,
    email character varying(50) NOT NULL,
    total_forms integer NOT NULL,
    form_completed integer NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    post_office_id bigint NOT NULL,
    company_level_id bigint NOT NULL,
    CONSTRAINT "PK_companies" PRIMARY KEY (company_id),
    CONSTRAINT "FK_companies_company_levels_company_level_id" FOREIGN KEY (company_level_id) REFERENCES company_levels (company_level_id) ON DELETE CASCADE,
    CONSTRAINT "FK_companies_post_offices_post_office_id" FOREIGN KEY (post_office_id) REFERENCES post_offices (post_office_id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_companies_company_code" ON companies (company_code);

CREATE INDEX "IX_companies_company_level_id" ON companies (company_level_id);

CREATE UNIQUE INDEX "IX_companies_gst" ON companies (gst);

CREATE INDEX "IX_companies_post_office_id" ON companies (post_office_id);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220927063904_Company', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE company_banks (
    company_bank_id bigint GENERATED BY DEFAULT AS IDENTITY,
    branch character varying(50) NOT NULL,
    ifsc character varying(50) NOT NULL,
    account_no character varying(50) NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    company_id bigint NOT NULL,
    bank_id bigint NOT NULL,
    CONSTRAINT "PK_company_banks" PRIMARY KEY (company_bank_id),
    CONSTRAINT "FK_company_banks_banks_bank_id" FOREIGN KEY (bank_id) REFERENCES banks (bank_id) ON DELETE CASCADE,
    CONSTRAINT "FK_company_banks_companies_company_id" FOREIGN KEY (company_id) REFERENCES companies (company_id) ON DELETE CASCADE
);

CREATE INDEX "IX_company_banks_bank_id" ON company_banks (bank_id);

CREATE UNIQUE INDEX "IX_company_banks_company_id_account_no" ON company_banks (company_id, account_no);

CREATE UNIQUE INDEX "IX_company_banks_company_id_ifsc" ON company_banks (company_id, ifsc);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220927165243_CompanyBank', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE company_contacts (
    company_contact_id bigint GENERATED BY DEFAULT AS IDENTITY,
    contact_number character varying(50) NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    company_id bigint NOT NULL,
    CONSTRAINT "PK_company_contacts" PRIMARY KEY (company_contact_id),
    CONSTRAINT "FK_company_contacts_companies_company_id" FOREIGN KEY (company_id) REFERENCES companies (company_id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_company_contacts_company_id_contact_number" ON company_contacts (company_id, contact_number);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220928024141_CompanyContact', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE verticals (
    vertical_id bigint GENERATED BY DEFAULT AS IDENTITY,
    vertical_name character varying(50) NOT NULL,
    CONSTRAINT "PK_verticals" PRIMARY KEY (vertical_id)
);

INSERT INTO verticals (vertical_id, vertical_name)
VALUES (1, 'IT');
INSERT INTO verticals (vertical_id, vertical_name)
VALUES (2, 'AUTOMOTIVE');

CREATE UNIQUE INDEX "IX_verticals_vertical_name" ON verticals (vertical_name);

SELECT setval(
    pg_get_serial_sequence('verticals', 'vertical_id'),
    GREATEST(
        (SELECT MAX(vertical_id) FROM verticals) + 1,
        nextval(pg_get_serial_sequence('verticals', 'vertical_id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220928072743_Vertical', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE company_verticals (
    company_vertical_id bigint GENERATED BY DEFAULT AS IDENTITY,
    company_id bigint NOT NULL,
    vertical_id bigint NOT NULL,
    parent_id bigint NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    CONSTRAINT "PK_company_verticals" PRIMARY KEY (company_vertical_id),
    CONSTRAINT "FK_company_verticals_companies_company_id" FOREIGN KEY (company_id) REFERENCES companies (company_id) ON DELETE CASCADE,
    CONSTRAINT "FK_company_verticals_verticals_vertical_id" FOREIGN KEY (vertical_id) REFERENCES verticals (vertical_id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_company_verticals_company_id_vertical_id" ON company_verticals (company_id, vertical_id);

CREATE INDEX "IX_company_verticals_vertical_id" ON company_verticals (vertical_id);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220928082332_CompanyVertical', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE domains (
    domain_id bigint GENERATED BY DEFAULT AS IDENTITY,
    domain_name character varying(50) NOT NULL,
    CONSTRAINT "PK_domains" PRIMARY KEY (domain_id)
);

INSERT INTO domains (domain_id, domain_name)
VALUES (1, 'SALES');
INSERT INTO domains (domain_id, domain_name)
VALUES (2, 'SERVICE');

CREATE UNIQUE INDEX "IX_domains_domain_name" ON domains (domain_name);

SELECT setval(
    pg_get_serial_sequence('domains', 'domain_id'),
    GREATEST(
        (SELECT MAX(domain_id) FROM domains) + 1,
        nextval(pg_get_serial_sequence('domains', 'domain_id'))),
    false);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220928094301_Domain', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE company_domains (
    company_domain_id bigint GENERATED BY DEFAULT AS IDENTITY,
    company_id bigint NOT NULL,
    domain_id bigint NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    CONSTRAINT "PK_company_domains" PRIMARY KEY (company_domain_id),
    CONSTRAINT "FK_company_domains_companies_company_id" FOREIGN KEY (company_id) REFERENCES companies (company_id) ON DELETE CASCADE,
    CONSTRAINT "FK_company_domains_domains_domain_id" FOREIGN KEY (domain_id) REFERENCES domains (domain_id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_company_domains_company_id_domain_id" ON company_domains (company_id, domain_id);

CREATE INDEX "IX_company_domains_domain_id" ON company_domains (domain_id);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220928100735_CompanyDomain', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE company_departments (
    department_id bigint GENERATED BY DEFAULT AS IDENTITY,
    department_name character varying(50) NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    company_id bigint NOT NULL,
    CONSTRAINT "PK_company_departments" PRIMARY KEY (department_id),
    CONSTRAINT "FK_company_departments_companies_company_id" FOREIGN KEY (company_id) REFERENCES companies (company_id) ON DELETE CASCADE
);

CREATE UNIQUE INDEX "IX_company_departments_company_id_department_name" ON company_departments (company_id, department_name);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220928140705_CompanyDepartment', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE divisions (
    division_id bigint GENERATED BY DEFAULT AS IDENTITY,
    division_name character varying(50) NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    department_id bigint NOT NULL,
    CONSTRAINT "PK_divisions" PRIMARY KEY (division_id),
    CONSTRAINT "FK_divisions_company_departments_department_id" FOREIGN KEY (department_id) REFERENCES company_departments (department_id) ON DELETE CASCADE
);

CREATE INDEX "IX_divisions_department_id" ON divisions (department_id);

CREATE UNIQUE INDEX "IX_divisions_division_name" ON divisions (division_name);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220928141559_Division', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE technologies (
    technology_id bigint GENERATED BY DEFAULT AS IDENTITY,
    technology_name character varying(50) NOT NULL,
    record_status character varying(50) NOT NULL,
    created_by bigint NOT NULL,
    created_on timestamp NOT NULL,
    updated_by bigint NOT NULL,
    updated_on timestamp NOT NULL,
    CONSTRAINT "PK_technologies" PRIMARY KEY (technology_id)
);

CREATE UNIQUE INDEX "IX_technologies_technology_name" ON technologies (technology_name);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220928142205_Technology', '6.0.9');

COMMIT;

START TRANSACTION;

CREATE TABLE division_technologies (
    division_id bigint NOT NULL,
    technology_id bigint NOT NULL,
    CONSTRAINT "PK_division_technologies" PRIMARY KEY (division_id, technology_id),
    CONSTRAINT "FK_division_technologies_divisions_division_id" FOREIGN KEY (division_id) REFERENCES divisions (division_id) ON DELETE CASCADE,
    CONSTRAINT "FK_division_technologies_technologies_technology_id" FOREIGN KEY (technology_id) REFERENCES technologies (technology_id) ON DELETE CASCADE
);

CREATE INDEX "IX_division_technologies_technology_id" ON division_technologies (technology_id);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20220928182737_DivisionTechnology', '6.0.9');

COMMIT;

