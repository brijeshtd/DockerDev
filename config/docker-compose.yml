version: '3.6'
services:
  db:
    image: postgres:14.5-bullseye
    container_name: ompgsqlone
    environment:
      - container_name=ompgsqlone
      - POSTGRES_USER=onlinemagic
      - POSTGRES_DB=identityone
      - POSTGRES_PASSWORD=onlinemagic
      - PGDATA=/var/lib/postgresql/data
    ports:
      - '5432:5432'
    volumes: 
      - /pgdata/:/var/lib/postgresql/data
      # - ./db-seed-files/:/etc/docker-entrypoint-initdb.d      


  reverseproxy:
    build: ./nginx/
    container_name: reverseproxy 
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./static_volume:/var/www/static_volume

  certbot:
    image: certbot/certbot
    container_name: certbot

    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --force-renewal --email "${CERT_MAIL}"  ${DOMAIN}  --agree-tos

  # reverseproxy:
      
  #     build: ./nginx/
  #     container_name: reverseproxy
  #     ports:
  #       - "80:80"
  #       - "443:443"
  #     volumes:
  #       - /etc/nginx/ssl/certificate.crt:/etc/nginx/ssl/certificate.crt
  #       - /etc/nginx/ssl/private.key:/etc/nginx/ssl/private.key
  #       - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  identityone:
    build: 
      context: ./IdentityOne/
    container_name: identityone
    command: ["dotnet","identityone.dll"]      
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=identityone.dll      
      # - "ConnectionStrings:EfConn=\"Server=ompgsqlone;Port=5432;Database=identityone;User Id=onlinemagic;Password=onlinemagic;\""
      # - "DapperConn:PgSql=\"User ID=onlinemagic;Password=onlinemagic;Host=ompgsqlone;Port=5432;Database=identityone;Pooling=true;Timeout=300;CommandTimeout=300;KeepAlive=300\""      
       
    depends_on:
      - db
    volumes: 
      - ./IdentityOne/appsettings.json:/app/appsettings.json
      - ./Keys/private-key.pem:/app/private-key.pem
      - ./Keys/public-key.pem:/app/public-key.pem

  omadmin:
    build:
      context: ./OmAdmin/
    container_name: omadmin
    command: ["dotnet","OmAdmin.dll"]      
    depends_on:
      - db
    # env_file:
    #   - ./OmAdmin/.env
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmAdmin.dll      
      # - "ConnectionStrings:EfConn=\"Server=ompgsqlone;Port=5432;Database=identityone;User Id=onlinemagic;Password=onlinemagic;\""
      # - "DapperConn:PgSql=\"User ID=onlinemagic;Password=onlinemagic;Host=ompgsqlone;Port=5432;Database=identityone;Pooling=true;Timeout=300;CommandTimeout=300;KeepAlive=300\""
      # - "ApiUrls:Identity=http://identityone:5000"
      # - "ApiUrls:Admin=http://omadminapi:5000"
    volumes: 
      - ./OmAdmin/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem
      - ./static_volume:/app/wwwroot/static

  omadminapi:
    build:
      context: ./OmAdminApi/
    container_name: omadminapi
    command: ["dotnet","OmAdminApi.dll"]      
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmAdminApi.dll      
    depends_on:
      - db
    volumes: 
      - ./OmAdminApi/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem


  omcompany:
    build:
      context: ./OmCompany/
    container_name: omcompany
    command: ["dotnet","OmCompany.dll"]       
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmCompany.dll      
    depends_on:
      - db
    volumes: 
      - ./OmCompany/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem
      - ./static_volume:/app/wwwroot/static

  omcustomer:
    build:
      context: ./OmCustomer/
    container_name: omcustomer
    command: ["dotnet","OmCustomer.dll"]    
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmCustomer.dll      
    depends_on:
      - db
    volumes: 
      - ./OmCustomer/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem
      - ./static_volume:/app/wwwroot/static

  omonboard:
    build: ./OmOnboard/
    container_name: omonboard
    command: ["dotnet","OmOnboard.dll"]
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmOnboard.dll
    depends_on:
      - db
    volumes: 
      - ./OmOnboard/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem
      - ./static_volume:/app/wwwroot/static


  omcarepackapi:
    build: ./OmCarePackApi/
    container_name: omcarepackapi
    command: ["dotnet","OmCarePackApi.dll"]
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmCarePackApi.dll
    depends_on:
      - db
    volumes: 
      - ./OmCarePackApi/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem

  whatsappone:
    build: ./WhatsAppOne/
    container_name: whatsappone
    command: ["dotnet","WhatsAppOne.dll"]
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=WhatsAppOne.dll
    depends_on:
      - db
    volumes: 
      - ./WhatsAppOne/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem

  ominventoryapi:
    build: ./OmInventoryApi/
    container_name: ominventoryapi
    command: ["dotnet","OmInventoryApi.dll"]    
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmInventoryApi.dll
    depends_on:
      - db
    volumes: 
      - ./OmInventoryApi/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem

  omproductapi:
    build: ./OmProductApi/
    container_name: omproductapi
    command: ["dotnet","OmProductApi.dll"]  
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmProductApi.dll
    depends_on:
      - db
    volumes: 
      - ./OmProductApi/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem

  omcustomerapi:
    build: ./OmCustomerApi/
    container_name: omcustomerapi
    command: ["dotnet","OmCustomerApi.dll"]      
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmCustomerApi.dll
    depends_on:
      - db
    volumes: 
      - ./OmCustomerApi/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem

  omemailapi:
    build: ./OmEmailApi/
    container_name: omemailapi
    command: ["dotnet","OmEmailApi.dll"]      
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmEmailApi.dll
    depends_on:
      - db
    volumes: 
      - ./OmEmailApi/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem

  omnotificationapi:
    build: ./OmNotificationApi/
    container_name: omnotificationapi
    command: ["dotnet","OmNotificationApi.dll"]  
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmNotificationApi.dll
    depends_on:
      - db
    volumes: 
      - ./OmNotificationApi/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem

  omwhatsappwebhook:
    build: ./OmWhatsappWebhook/
    container_name: omwhatsappwebhook
    command: ["dotnet","OmWhatsappWebhook.dll"]  
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmWhatsappWebhook.dll
    depends_on:
      - db
    volumes: 
      - ./OmWhatsappWebhook/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem

  omwhatsappapi:
    build: ./OmWhatsappApi/
    container_name: omwhatsappapi
    command: ["dotnet","OmWhatsappApi.dll"]      
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmWhatsappApi.dll
    depends_on:
      - db
    volumes: 
      - ./OmWhatsappApi/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem

  omserviceapi:
    build: ./OmServiceApi/
    container_name: omserviceapi
    command: ["dotnet","OmServiceApi.dll"]      
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmServiceApi.dll
    depends_on:
      - db
    volumes: 
      - ./OmServiceApi/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem
  
  omservice:
    build:
      context: ./OmService/
    container_name: omservice
    command: ["dotnet","OmService.dll"]    
    environment:
      - ASPNETCORE_URLS=http://+:5000
      - RUNNER=OmService.dll      
    depends_on:
      - db
    volumes: 
      - ./OmService/appsettings.json:/app/appsettings.json
      - ./Keys/public-key.pem:/app/public-key.pem
      - ./static_volume:/app/wwwroot/static
  
